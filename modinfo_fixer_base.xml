<?xml version="1.0"?>
<!-- Copyright 2018 FiatAccompli -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:strip-space elements="*"/>
  
  <xsl:param name="release" select="false()"/>

  <!-- Modbuddy writes priority (lowercase) attribute, but the game looks for Priority (uppercase).  
       Because I guess even the most cursory testing is unnecessary for Firaxis. -->
  <xsl:template match="@priority">
    <xsl:attribute name="Priority">
      <xsl:value-of select="."/>
    </xsl:attribute>
  </xsl:template>
  
  <xsl:template name="AddCompatibleVersions">
    <CompatibleVersions>2.0</CompatibleVersions>
  </xsl:template>
  
  <xsl:template match="/Mod/Properties/CompatibleVersions">
  </xsl:template>

  <!--Identity template, provides default behavior that copies all content into the output -->
  <xsl:template match="@*|node()">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

  <!-- Dependencies.  Don't put these in development versions because it's a pain
       in the ass in-game because the development version gets linked to the 
       published version of requirements so you can't mix and match from the 
       hierarchies. -->
	<xsl:template match="/Mod/Dependencies"/>

  <!-- Fucking Microsoft.  Even if you don't want to implement an XSLT 2.0 processor there's 
       no reason you can't provide xpath 2.0 functions or their equivalent -->
  <!-- From http://geekswithblogs.net/Erik/archive/2008/04/01/120915.aspx -->
  <xsl:template name="string-replace-all">
		<xsl:param name="text" />
		<xsl:param name="replace" />
		<xsl:param name="by" />
		<xsl:choose>
			<xsl:when test="contains($text, $replace)">
				<xsl:value-of select="substring-before($text,$replace)" />
				<xsl:value-of select="$by" />
				<xsl:call-template name="string-replace-all">
					<xsl:with-param name="text"
					select="substring-after($text,$replace)" />
					<xsl:with-param name="replace" select="$replace" />
					<xsl:with-param name="by" select="$by" />
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$text" />
			</xsl:otherwise>
		</xsl:choose>
  </xsl:template>
  
  <xsl:template name="FormatText">
    <xsl:param name="text"/>
    <xsl:param name="is_mod_name" select="false()"/>

    <xsl:call-template name="string-replace-all">
      <xsl:with-param name="text">
				<xsl:call-template name="string-replace-all">
					<xsl:with-param name="text" select="$text"/>
					<xsl:with-param name="replace" select="'&#10;'"/>
					<xsl:with-param name="by" select="'[NEWLINE]'"/>
				</xsl:call-template>
			</xsl:with-param>
			<xsl:with-param name="replace" select="'* '"/>
			<xsl:with-param name="by" select="'[ICON_BULLET]'"/>
		</xsl:call-template>
		
		<xsl:if test="$is_mod_name and not($release)">
			<xsl:value-of select="' *** (In Development)'"/>
	  </xsl:if>
  </xsl:template>
  
  <xsl:template name="GenerateLanguageText">
    <xsl:param name="language"/>
    <xsl:param name="is_mod_name"/>
    <xsl:param name="base"/>
    <xsl:param name="localized"/>

    <xsl:element name="{$language}">
			<xsl:call-template name="FormatText">
			  <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
				<xsl:with-param name="text">
					<xsl:choose>
				    <xsl:when test="string-length($localized) &gt; 0">
				      <xsl:value-of select="$localized"/>
				    </xsl:when>
				    <xsl:otherwise>
				      <xsl:value-of select="$base"/>
				    </xsl:otherwise>
			    </xsl:choose>
			  </xsl:with-param>
			</xsl:call-template>
		</xsl:element>
  </xsl:template>
  
  <xsl:template name="GenerateText">
    <xsl:param name="identifier"/>
    <xsl:param name="is_mod_name" select="false()"/>
    <xsl:param name="base"/>
    <xsl:param name="de_DE" select="''" />
    <xsl:param name="en_US" select="''" />
    <xsl:param name="es_ES" select="''" />
    <xsl:param name="fr_FR" select="''" />
    <xsl:param name="it_IT" select="''" />
    <xsl:param name="pl_PL" select="''" />
    <xsl:param name="pt_BR" select="''" />
    <xsl:param name="ru_RU" select="''" />
    <xsl:param name="ja_JP" select="''" />
    <xsl:param name="ko_KR" select="''" />
    <xsl:param name="zh_Hans_CN" select="''" />
    <xsl:param name="zh_Hant_HK" select="''" />
    <Text>
      <xsl:attribute name="id">
        <xsl:value-of select="$identifier"/>
      </xsl:attribute>
      <xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">en_US</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$en_US"/>
      </xsl:call-template>
      <xsl:call-template name="GenerateLanguageText">
				<xsl:with-param name="language">de_DE</xsl:with-param>
				<xsl:with-param name="is_mod_name" select="$is_mod_name"/>
				<xsl:with-param name="base" select="$base"/>
				<xsl:with-param name="localized" select="$de_DE"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">es_ES</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$es_ES"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">fr_FR</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$fr_FR"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">it_IT</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$it_IT"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">pl_PL</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$pl_PL"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">pt_BR</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$pt_BR"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">ru_RU</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$ru_RU"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">ja_JP</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$ja_JP"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">ko_KR</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$ko_KR"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">zh_Hans_CN</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$zh_Hans_CN"/>
      </xsl:call-template>
			<xsl:call-template name="GenerateLanguageText">
        <xsl:with-param name="language">zh_Hant_HK</xsl:with-param>
        <xsl:with-param name="is_mod_name" select="$is_mod_name"/>
        <xsl:with-param name="base" select="$base"/>
        <xsl:with-param name="localized" select="$zh_Hant_HK"/>
      </xsl:call-template>
    </Text>
  </xsl:template>

  <!-- LocalizedText element and contents will be generated by GenerateText 
       template calls from the main template.  Remove the existing one. -->
  <xsl:template match="LocalizedText"/>
</xsl:stylesheet>